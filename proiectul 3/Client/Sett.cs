//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAlbum")]
public interface IAlbum
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/SaveMedia", ReplyAction="http://tempuri.org/IAlbum/SaveMediaResponse")]
    void Salvare(string adresa, string persons, string eveniment, string locatie, string tip, System.DateTime creationDate);
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/SaveMedia", ReplyAction="http://tempuri.org/IAlbum/SaveMediaResponse")]
    System.Threading.Tasks.Task SaveMediaAsync(string path, string events, string persons, string peisaj, string locatie, string altele, System.DateTime creationDate);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/DeleteMedia", ReplyAction="http://tempuri.org/IAlbum/DeleteMediaResponse")]
    void Sterge(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/DeleteMedia", ReplyAction="http://tempuri.org/IAlbum/DeleteMediaResponse")]
    System.Threading.Tasks.Task DeleteMediaAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/ShowGridData", ReplyAction="http://tempuri.org/IAlbum/ShowGridDataResponse")]
    object Afisare();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/ShowGridData", ReplyAction="http://tempuri.org/IAlbum/ShowGridDataResponse")]
    System.Threading.Tasks.Task<object> ShowGridDataAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/ShowData", ReplyAction="http://tempuri.org/IAlbum/ShowDataResponse")]
    
    
    
    
    void EditData(string pathForEdit, string editEvent, string editPerson, string editPeisaj, string editLoc, string editAltele);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/EditData", ReplyAction="http://tempuri.org/IAlbum/EditDataResponse")]
    System.Threading.Tasks.Task EditDataAsync(string pathForEdit, string editEvent, string editPerson, string editPeisaj, string editLoc, string editAltele);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/FindData", ReplyAction="http://tempuri.org/IAlbum/FindDataResponse")]
    string Cauta(string adresa, string eveniment, string persons, string loc);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlbum/FindData", ReplyAction="http://tempuri.org/IAlbum/FindDataResponse")]
    System.Threading.Tasks.Task<string> FindDataAsync(string result, string editEvent, string editPerson, string editPeisaj, string editLoc, string editAltele);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAlbumChannel : IAlbum, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MediaClient : System.ServiceModel.ClientBase<IAlbum>, IAlbum
{
    
    public MediaClient()
    {
    }
    
    public MediaClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MediaClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MediaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void SaveMedia(string adresa, string persons, string eveniment, string locatie, string tip, System.DateTime creationDate)
    {
        base.Channel.Salvare(adresa, persons, eveniment, locatie, tip, creationDate);
    }
    
    public System.Threading.Tasks.Task SaveMediaAsync(string path, string events, string persons, string peisaj, string locatie, string altele, System.DateTime creationDate)
    {
        return base.Channel.SaveMediaAsync(path, events, persons, peisaj, locatie, altele, creationDate);
    }
    
    public void Sterge(string path)
    {
        base.Channel.Sterge(path);
    }
    
    public System.Threading.Tasks.Task DeleteMediaAsync(string path)
    {
        return base.Channel.DeleteMediaAsync(path);
    }
    
    public object Afisare()
    {
        return base.Channel.Afisare();
    }
    
    public System.Threading.Tasks.Task<object> ShowGridDataAsync()
    {
        return base.Channel.ShowGridDataAsync();
    }
    
    
    
   
    
    
    
    public void EditData(string pathForEdit, string editEvent, string editPerson, string editPeisaj, string editLoc, string editAltele)
    {
        base.Channel.EditData(pathForEdit, editEvent, editPerson, editPeisaj, editLoc, editAltele);
    }
    
    public System.Threading.Tasks.Task EditDataAsync(string pathForEdit, string editEvent, string editPerson, string editPeisaj, string editLoc, string editAltele)
    {
        return base.Channel.EditDataAsync(pathForEdit, editEvent, editPerson, editPeisaj, editLoc, editAltele);
    }
    
    public string Cauta(string result, string eveniment, string persons, string locatie)
    {
        return base.Channel.Cauta(result, eveniment, persons, locatie);
    }
    
    public System.Threading.Tasks.Task<string> FindDataAsync(string result, string editEvent, string editPerson, string editPeisaj, string editLoc, string editAltele)
    {
        return base.Channel.FindDataAsync(result, editEvent, editPerson, editPeisaj, editLoc, editAltele);
    }

    public void Salvare(string adresa, string persons, string eveniment, string locatie, string tip, DateTime creationDate)
    {
        throw new NotImplementedException();
    }

    

}
